"use strict";(self.webpackChunkReactifydocs=self.webpackChunkReactifydocs||[]).push([[5727],{2134:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>d,default:()=>j,frontMatter:()=>c,metadata:()=>o,toc:()=>h});var i=t(5893),a=t(1151),s=t(7618),r=t(3149);const c={sidebar_label:"Transient bindings"},d="Transient bindings",o={id:"inject/transient-bindings",title:"Transient bindings",description:"By default, every instance obtained using Reactify Inject is a singleton. This means that instances are cached the first time",source:"@site/docs/inject/transient-bindings.mdx",sourceDirName:"inject",slug:"/inject/transient-bindings",permalink:"/inject/transient-bindings",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Transient bindings"},sidebar:"docs",previous:{title:"Scopes",permalink:"/inject/scopes"},next:{title:"Speeding up dependency injection",permalink:"/inject/speeding-up-injection"}},l={},h=[{value:"Defining transient bindings",id:"defining-transient-bindings",level:2},{value:"Transient binding example",id:"transient-binding-example",level:2}];function u(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"transient-bindings",children:"Transient bindings"}),"\n",(0,i.jsxs)(e.p,{children:["By default, every instance obtained using Reactify Inject is a singleton. This means that instances are cached the first time\nthey are retrieved and then reused in subsequent ",(0,i.jsx)(e.code,{children:"Injector#getInstance"})," calls. This behavior is different from the default\nbehaviour of most other dependency injection frameworks."]}),"\n",(0,i.jsx)(e.p,{children:'However, there are situations when you do not want to cache an instance, but rather you want to create a new instance each time.\nFor that, you can use "transient" binding. Such bindings are special in that instances obtained with "transient" bindings\nare not cached. Such instances are recreated each time they are retrieved.'}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsxs)(e.p,{children:["Transient bindings are not transitive. If you have a non-transient binding ",(0,i.jsx)(e.code,{children:"A"})," that depends on an instance\nprovided through a transient binding ",(0,i.jsx)(e.code,{children:"B"}),", a binding ",(0,i.jsx)(e.code,{children:"A"})," is not itself transient. It will use a cached instance of the transient\nbinding."]})}),"\n",(0,i.jsx)(e.h2,{id:"defining-transient-bindings",children:"Defining transient bindings"}),"\n",(0,i.jsx)(e.p,{children:"There are several ways to define a transient binding."}),"\n",(0,i.jsxs)(e.p,{children:["We can use the ",(0,i.jsx)(e.code,{children:"asTransient()"})," method from the ",(0,i.jsx)(s.Z,{text:"ModuleBuilder",url:"/core-inject/src/main/java/io/Reactify/inject/module/ModuleBuilder"})," DSL\nand mark a binding as transient as follows:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"bind(double.class).to(Math::random).asTransient();\n"})}),"\n",(0,i.jsxs)(e.p,{children:["Or, alternatively we can use the ",(0,i.jsx)(e.code,{children:"@Transient"})," annotation to annotate methods already annotated with the ",(0,i.jsx)(e.code,{children:"@Provides"})," annotation:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"@Provides\ndouble random() {\n    return Math.random();\n}\n"})}),"\n",(0,i.jsxs)(e.p,{children:["When you retrieve an instance of ",(0,i.jsx)(e.code,{children:"double"})," from the injector, you will get a new random number each time."]}),"\n",(0,i.jsx)(e.h2,{id:"transient-binding-example",children:"Transient binding example"}),"\n",(0,i.jsxs)(e.p,{children:["Let's look at another example. Imagine that our application needs to know a current time. Therefore, we cannot cache an\n",(0,i.jsx)(e.code,{children:"Instant"})," instance. Therefore, we have to create a binding for an ",(0,i.jsx)(e.code,{children:"Instant"})," as a transient binding."]}),"\n",(0,i.jsxs)(e.p,{children:["Let's define a module that defines a binding for an instance of current ",(0,i.jsx)(e.code,{children:"Instant"})," (notice the ",(0,i.jsx)(e.code,{children:"@Transient"})," annotation):"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",metastring:"url=/examples/core/inject/src/main/java/TransientBindingExample.java tag=MODULE",children:"static class CurrentTimeModule extends AbstractModule {\n  @Provides\n  @Transient\n  Instant currentInstant() {\n    return Instant.now();\n  }\n}\n"})}),"\n",(0,i.jsxs)(e.p,{children:["Now let's retrieve two instances of an ",(0,i.jsx)(e.code,{children:"Instant"})," from the injector, waiting for a second between each retrieval:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",metastring:"url=/examples/core/inject/src/main/java/TransientBindingExample.java tag=INJECTOR",children:"Injector injector = Injector.of(new CurrentTimeModule());\n\nSystem.out.println(injector.getInstance(Instant.class));\nThread.sleep(1000);\nSystem.out.println(injector.getInstance(Instant.class));\n"})}),"\n",(0,i.jsxs)(e.p,{children:["If we run the example, we see that the retrieved instances of ",(0,i.jsx)(e.code,{children:"Instant"})," differ by about 1 second."]}),"\n",(0,i.jsxs)(e.p,{children:["You can find a full example on ",(0,i.jsx)(r.Z,{href:"https://github.com/hoangtien2k3/reactify-core/{{githubExamplesBranch}}/examples/core/inject/src/main/java/TransientBindingExample.java",children:"Github"})]})]})}function j(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(u,{...n})}):u(n)}},3149:(n,e,t)=>{t.d(e,{Z:()=>o});t(7294);var i=t(9962),a=t(1106),s=t.n(a),r=t(5835),c=t.n(r),d=t(5893);c().interpolate=/{{([\s\S]+?)}}/g;const o=function(n){let{href:e,children:t,target:a="_blank"}=n;const{siteConfig:r}=(0,i.Z)(),c=s()(e);return(0,d.jsx)("a",{href:c(r.customFields),target:a,children:t})}},7618:(n,e,t)=>{t.d(e,{Z:()=>s});t(7294);var i=t(9962),a=t(5893);const s=n=>{let{url:e,text:t,isInline:s=!0,children:r}=n;const{siteConfig:c}=(0,i.Z)(),d=e.startsWith("/examples")?c.customFields.githubExamplesBranch:c.customFields.githubBranch;return(0,a.jsx)("a",{style:s?{}:{display:"block",marginBottom:"16px"},href:c.customFields.githubUrl+"/"+d+e,target:"_blank",children:t||r})}}}]);