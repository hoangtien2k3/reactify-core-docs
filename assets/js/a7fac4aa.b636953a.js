"use strict";(self.webpackChunkReactifydocs=self.webpackChunkReactifydocs||[]).push([[1361],{9166:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>h,toc:()=>p});var r=n(5893),s=n(1151),i=n(7618),a=n(3149),l=n(7815);const c={title:"Reactify HTTP | Asynchronous HTTP server and client",description:"Create legacy-free asynchronous HTTP server and client applications with Reactify",sidebar_label:"Overview",keywords:["java http","java","http server","http client","java http server","java http client","java framework","spring alternative","netty alternative","jetty alternative"],slug:"/http"},o="Overview",h={id:"http/overview",title:"Reactify HTTP | Asynchronous HTTP server and client",description:"Create legacy-free asynchronous HTTP server and client applications with Reactify",source:"@site/docs/http/overview.mdx",sourceDirName:"http",slug:"/http",permalink:"/http",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Reactify HTTP | Asynchronous HTTP server and client",description:"Create legacy-free asynchronous HTTP server and client applications with Reactify",sidebar_label:"Overview",keywords:["java http","java","http server","http client","java http server","java http client","java framework","spring alternative","netty alternative","jetty alternative"],slug:"/http"},sidebar:"docs",previous:{title:"Config",permalink:"/boot/config"},next:{title:"Benchmarks",permalink:"/http/benchmarks"}},d={},p=[{value:"Features",id:"features",level:2},{value:"AsyncServlet",id:"asyncservlet",level:2},{value:"Add Reactify HTTP to your project",id:"add-Reactify-http-to-your-project",level:2}];function v(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(t.p,{children:"High performance asynchronous HTTP server and client."}),"\n",(0,r.jsxs)(t.p,{children:["Reactify-Core has built-in base methods to call api via webclient, with the simplest setup and high performance ",(0,r.jsx)(t.a,{href:"/http/benchmarks",children:"benchmarks"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"Demo of post API call method, Restful API:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",metastring:"url=/examples/tutorials/getting-started/src/main/java/HttpHelloWorldExample.java tag=EXAMPLE",children:'public Mono<Optional<T>> get(\n' +
                    '        WebClient webClient,\n' +
                    '        String url,\n' +
                    '        MultiValueMap<String, String> headerMap,\n' +
                    '        MultiValueMap<String, String> payload,\n' +
                    '        Class<?> resultClass) {\n' +
                    '    log.info("Rest service payload client: {}", payload);\n' +
                    '    return webClient\n' +
                    '            .get()\n' +
                    '            .uri(uriBuilder -> uriBuilder\n' +
                    '                    .path(url)\n' +
                    '                    .queryParams(getSafePayload(payload))\n' +
                    '                    .build())\n' +
                    '            .headers(httpHeaders -> httpHeaders.addAll(getSafeRestHeader(headerMap)))\n' +
                    '            .retrieve()\n' +
                    '            .bodyToMono(String.class)\n' +
                    '            .map(response -> {\n' +
                    '                log.info("Rest response {}", response);\n' +
                    '                if (DataUtil.isNullOrEmpty(response)) {\n' +
                    '                    return this.getDefaultValue();\n' +
                    '                }\n' +
                    '                if (DataUtil.safeEqual(resultClass.getSimpleName(), "String")) {\n' +
                    '                    return Optional.of((T) response);\n' +
                    '                }\n' +
                    '                T result = DataUtil.parseStringToObject(response, resultClass);\n' +
                    '                return Optional.ofNullable(result);\n' +
                    '            })\n' +
                    '            .onErrorResume(WebClientResponseException.class, e -> {\n' +
                    '                log.error("Exception call get rest api: ", e);\n' +
                    '                String responseError = e.getResponseBodyAsString(UTF_8);\n' +
                    '                T result = DataUtil.parseStringToObject(responseError, resultClass);\n' +
                    '                return Mono.just(Optional.ofNullable(result));\n' +
                    '            });\n' +
                    '}'})}),"\n",(0,r.jsx)(t.h2,{id:"features",children:"Features of Using WebClient for API Calls in WebFlux"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Non-Blocking I/O"}),"\n",(0,r.jsxs)(t.li,{children:["Declarative API: Offers a fluent and declarative API for building HTTP requests and processing responses, enhancing code readability and maintainability "]}),"\n",(0,r.jsx)(t.li,{children:"Asynchronous Communication"}),"\n",(0,r.jsx)(t.li,{children:"Full HTTP Support"}),"\n",(0,r.jsx)(t.li,{children:"Error Handling"}),"\n",(0,r.jsxs)(t.li,{children:["Integration with Reactive Streams ",(0,r.jsx)(t.a,{href:"/inject",children:"Reactify Inject (DI)"}),(0,r.jsx)(t.code,{children:"Streaming and Backpressure"})]}),"\n",(0,r.jsxs)(t.li,{children:["Enables streaming large responses and supports backpressure to control data flow effectively. "]})]}),"\n",(0,r.jsx)(t.h2,{id:"asyncservlet",children:"AsyncServlet"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Basically, it's just an asynchronous function that maps ",(0,r.jsx)(i.Z,{text:"HttpRequest",url:"/core-http/src/main/java/io/Reactify/http/HttpRequest.java"})," to ",(0,r.jsx)(i.Z,{text:"HttpResponse",url:"/core-http/src/main/java/io/Reactify/http/HttpResponse.java"})]}),"\n",(0,r.jsxs)(t.li,{children:["Collection of pre-defined ",(0,r.jsx)(t.code,{children:"AsyncServlets"})," out of the box (",(0,r.jsx)(t.a,{href:"/http/examples#static-servlet-example",children:(0,r.jsx)(t.code,{children:"StaticServlet"})}),",\n",(0,r.jsx)(t.a,{href:"/http/examples#blocking-servlet-example",children:(0,r.jsx)(t.code,{children:"BlockingServlet"})}),", ",(0,r.jsx)(t.a,{href:"/http/examples#routing-servlet-example",children:(0,r.jsx)(t.code,{children:"RoutingServlet"})}),", etc.)"]}),"\n",(0,r.jsxs)(t.li,{children:["Extensive support of functional composition of ",(0,r.jsx)(t.code,{children:"AsyncServlets"}),". ",(0,r.jsx)(t.a,{href:"/http/examples#routing-servlet-example",children:(0,r.jsx)(t.code,{children:"RoutingServlet"})})," for building servlet routing","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Flexible mapping of HTTP paths and methods to ",(0,r.jsx)(t.code,{children:"AsyncServlets"})," (including other RoutingServlets)"]}),"\n",(0,r.jsxs)(t.li,{children:["Support of path parameters (like ",(0,r.jsxs)(t.em,{children:["/users/",":id"]}),") and relative paths"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"add-Reactify-http-to-your-project",children:"Add Reactify HTTP to your project"}),"\n",(0,r.jsxs)(t.p,{children:["You can add Reactify HTTP to your project by importing its Maven repository.\nThese docs cover the most recent release of Reactify HTTP ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(l.Z,{name:"currentVersion"})})," (see on ",(0,r.jsx)(a.Z,{href:"https://github.com/hoangtien2k3/reactify-core/tree/{{currentVersion}}/core-http",children:"Github"})," or ",(0,r.jsx)(t.a,{href:"https://mvnrepository.com/artifact/io.Reactify/Reactify-http",children:"Maven"}),")."]})]})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(v,{...e})}):v(e)}},3149:(e,t,n)=>{n.d(t,{Z:()=>o});n(7294);var r=n(9962),s=n(1106),i=n.n(s),a=n(5835),l=n.n(a),c=n(5893);l().interpolate=/{{([\s\S]+?)}}/g;const o=function(e){let{href:t,children:n,target:s="_blank"}=e;const{siteConfig:a}=(0,r.Z)(),l=i()(t);return(0,c.jsx)("a",{href:l(a.customFields),target:s,children:n})}},7618:(e,t,n)=>{n.d(t,{Z:()=>i});n(7294);var r=n(9962),s=n(5893);const i=e=>{let{url:t,text:n,isInline:i=!0,children:a}=e;const{siteConfig:l}=(0,r.Z)(),c=t.startsWith("/examples")?l.customFields.githubExamplesBranch:l.customFields.githubBranch;return(0,s.jsx)("a",{style:i?{}:{display:"block",marginBottom:"16px"},href:l.customFields.githubUrl+"/"+c+t,target:"_blank",children:n||a})}},7815:(e,t,n)=>{n.d(t,{Z:()=>s});n(7294);var r=n(9962);const s=e=>{let{name:t}=e;const{siteConfig:n}=(0,r.Z)();if(!t)throw new Error("Variable name is required");if(void 0===n.customFields[t])throw new Error(`Variable ${t} not exist`);return n.customFields[t]}}}]);