"use strict";(self.webpackChunkactivejdocs=self.webpackChunkactivejdocs||[]).push([[5220],{6971:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>v,frontMatter:()=>c,metadata:()=>d,toc:()=>g});var r=i(5893),t=i(1151),s=i(7618),a=i(7815),o=i(3149);const c={title:"ActiveJ Codegen Overview | Dynamic bytecode generator with minimal overhead",description:"ActiveJ Codegen is a dynamic bytecode generator with minimal overhead and convenient API",sidebar_label:"Overview",slug:"/codegen"},l="Overview",d={id:"codegen/overview",title:"ActiveJ Codegen Overview | Dynamic bytecode generator with minimal overhead",description:"ActiveJ Codegen is a dynamic bytecode generator with minimal overhead and convenient API",source:"@site/docs/codegen/overview.mdx",sourceDirName:"codegen",slug:"/codegen",permalink:"/codegen",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"ActiveJ Codegen Overview | Dynamic bytecode generator with minimal overhead",description:"ActiveJ Codegen is a dynamic bytecode generator with minimal overhead and convenient API",sidebar_label:"Overview",slug:"/codegen"},sidebar:"docs",previous:{title:"Benchmarks",permalink:"/inject/benchmarks"},next:{title:"Examples",permalink:"/codegen/examples"}},h={},g=[{value:"Why ActiveJ Codegen?",id:"why-activej-codegen",level:2},{value:"Code generation",id:"code-generation",level:2},{value:"Add ActiveJ Codegen to your project",id:"add-activej-codegen-to-your-project",level:2}];function u(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["ActiveJ Codegen is an efficient Java code generator with a streamlined and simple API. It is built on top of ObjectWeb ASM and has zero-overhead performance. ActiveJ Codegen is widely used in ",(0,r.jsx)(n.a,{href:"/serializer",children:"ActiveJ Serializer"}),", making it ",(0,r.jsx)(n.a,{href:"https://github.com/activej/jvm-serializers",children:"the fastest JVM-based serializer in the world"}),").\nActiveJ Codegen is one of the ActiveJ technologies, but has minimal third-party dependencies and can be used as a stand-alone component."]}),"\n",(0,r.jsx)(n.h2,{id:"why-activej-codegen",children:"Why ActiveJ Codegen?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Utilizes ASM library for code generation and manipulation"}),"\n",(0,r.jsx)(n.li,{children:"Provides a concise Expressions API that provides a Lisp-like DSL for describing new classes"}),"\n",(0,r.jsx)(n.li,{children:"Supports caching of generated classes"}),"\n",(0,r.jsx)(n.li,{children:"Suitable for dynamic class generation based on runtime parameters (e.g. query processing)"}),"\n",(0,r.jsx)(n.li,{children:"Supports relational algebra operations for individual items: aggregate functions, predicates, ordering, group-by, etc."}),"\n",(0,r.jsx)(n.li,{children:"Features automatic type inference"}),"\n",(0,r.jsx)(n.li,{children:"Zero-overhead performance"}),"\n",(0,r.jsx)(n.li,{children:"Built-in in-memory caching as well as the ability to use a persistent bytecode cache"}),"\n",(0,r.jsx)(n.li,{children:"Support for Records (heterogeneous data containers)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"code-generation",children:"Code generation"}),"\n",(0,r.jsxs)(n.p,{children:["Suppose we want to create a class that implements the ",(0,r.jsx)(n.code,{children:"Person"})," interface."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public interface Greeter {\n    void sayHello();\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:['A generated class should simply output "Hello World" message when the ',(0,r.jsx)(n.code,{children:"sayHello()"})," method is called."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public class WorldGreeter implements Greeter {\n\t@Override\n\tpublic void sayHello() {\n\t\tSystem.out.println("Hello World");\n\t}\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["To generate such a class programmatically we need use the ",(0,r.jsx)(s.Z,{url:"/core-codegen/src/main/java/io/activej/codegen/ClassGenerator.java",children:(0,r.jsx)(n.code,{children:"ClassGenerator"})})," class\nto define how a class should be created. We also need to use the ",(0,r.jsx)(s.Z,{url:"/core-codegen/src/main/java/io/activej/codegen/DefiningClassLoader.java",children:(0,r.jsx)(n.code,{children:"DefiningClassLoader"})}),"\nto actually define a new class."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'DefiningClassLoader classLoader = DefiningClassLoader.create();\n\nClass<Greeter> greeterClass = ClassGenerator.builder(Greeter.class)\n\t.withMethod("sayHello",\n\t\tcall(staticField(System.class, "out"), "println", value("Hello world")))\n    .build()\n\t.generateClass(classLoader);\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Notice the ",(0,r.jsx)(n.code,{children:'call(staticField(System.class, "out"), "println", value("Hello world"))'})," expression."]}),"\n",(0,r.jsxs)(n.p,{children:["This is how Expressions DSL looks like.\nFirst, we access static field ",(0,r.jsx)(n.code,{children:"out"})," of ",(0,r.jsx)(n.code,{children:"System"})," class. Then we call ",(0,r.jsx)(n.code,{children:"println()"})," method on it, passing value ",(0,r.jsx)(n.code,{children:'"Hello world"'})," as an argument.\nThis is equivalent to a ",(0,r.jsx)(n.code,{children:'System.out.println("Hello world)'})]}),"\n",(0,r.jsxs)(n.p,{children:["When a new instance of this class is created and the ",(0,r.jsx)(n.code,{children:"sayHello()"})," method is called, the output is ",(0,r.jsx)(n.em,{children:'"Hello world"'})," as expected."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'Greeter greeter = greeterClass.getDeclaredConstructor().newInstance();\ngreeter.sayHello(); // prints "Hello world" to stdout\n'})}),"\n",(0,r.jsx)(n.p,{children:"This is merely a hint of what ActiveJ Codegen is capable of. For more information, please refer to examples or internal documentation."}),"\n",(0,r.jsx)(n.h2,{id:"add-activej-codegen-to-your-project",children:"Add ActiveJ Codegen to your project"}),"\n",(0,r.jsxs)(n.p,{children:["You can add ActiveJ Codegen to your project by importing its Maven repository.\nThese docs cover the most recent release of ActiveJ Codegen ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(a.Z,{name:"currentVersion"})})," (see on ",(0,r.jsx)(o.Z,{href:"https://github.com/activej/activej/tree/{{currentVersion}}/core-codegen",children:"Github"})," or ",(0,r.jsx)(n.a,{href:"https://mvnrepository.com/artifact/io.activej/activej-codegen",children:"Maven"}),")."]})]})}function v(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},3149:(e,n,i)=>{i.d(n,{Z:()=>l});i(7294);var r=i(9962),t=i(1106),s=i.n(t),a=i(5835),o=i.n(a),c=i(5893);o().interpolate=/{{([\s\S]+?)}}/g;const l=function(e){let{href:n,children:i,target:t="_blank"}=e;const{siteConfig:a}=(0,r.Z)(),o=s()(n);return(0,c.jsx)("a",{href:o(a.customFields),target:t,children:i})}},7618:(e,n,i)=>{i.d(n,{Z:()=>s});i(7294);var r=i(9962),t=i(5893);const s=e=>{let{url:n,text:i,isInline:s=!0,children:a}=e;const{siteConfig:o}=(0,r.Z)(),c=n.startsWith("/examples")?o.customFields.githubExamplesBranch:o.customFields.githubBranch;return(0,t.jsx)("a",{style:s?{}:{display:"block",marginBottom:"16px"},href:o.customFields.githubUrl+"/"+c+n,target:"_blank",children:i||a})}},7815:(e,n,i)=>{i.d(n,{Z:()=>t});i(7294);var r=i(9962);const t=e=>{let{name:n}=e;const{siteConfig:i}=(0,r.Z)();if(!n)throw new Error("Variable name is required");if(void 0===i.customFields[n])throw new Error(`Variable ${n} not exist`);return i.customFields[n]}}}]);