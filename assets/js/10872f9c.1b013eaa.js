"use strict";(self.webpackChunkactivejdocs=self.webpackChunkactivejdocs||[]).push([[6775],{8163:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>h});var t=r(5893),i=r(1151),a=r(7618),s=r(7815);const l={title:"ActiveJ | Launcher, efficiently manage application lifecycle",sidebar_label:"Launcher",description:"ActiveJ Launcher manages application lifecycle, starts and stops services and also has handy diagnostic tools.",keywords:["launcher","java launcher","application lifecycle","java framework","spring alternative","netty alternative","jetty alternative"]},c="Launcher",o={id:"boot/launcher",title:"ActiveJ | Launcher, efficiently manage application lifecycle",description:"ActiveJ Launcher manages application lifecycle, starts and stops services and also has handy diagnostic tools.",source:"@site/docs/boot/launcher.mdx",sourceDirName:"boot",slug:"/boot/launcher",permalink:"/boot/launcher",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"ActiveJ | Launcher, efficiently manage application lifecycle",sidebar_label:"Launcher",description:"ActiveJ Launcher manages application lifecycle, starts and stops services and also has handy diagnostic tools.",keywords:["launcher","java launcher","application lifecycle","java framework","spring alternative","netty alternative","jetty alternative"]},sidebar:"docs",previous:{title:"Net",permalink:"/async-io/net"},next:{title:"Service Graph",permalink:"/boot/servicegraph"}},d={},h=[{value:"Overview",id:"overview",level:2},{value:"Features",id:"features",level:2},{value:"Launcher in a nutshell",id:"launcher-in-a-nutshell",level:2},{value:"More examples",id:"more-examples",level:2},{value:"Hello World Example",id:"hello-world-example",level:3},{value:"HTTP Server from scratch using Launcher",id:"http-server-from-scratch-using-launcher",level:3},{value:"Working with program arguments",id:"working-with-program-arguments",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"launcher",children:"Launcher"}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["Launcher is essentially an abstracted and generalized implementation of the ",(0,t.jsx)(n.code,{children:"main()"})," method.\nIt integrates modules and services together and manages the lifecycle of the application."]}),"\n",(0,t.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Perfect compatibility with ",(0,t.jsx)(n.a,{href:"/inject",children:"ActiveJ Inject"})]}),"\n",(0,t.jsxs)(n.li,{children:["Can be combined with the ",(0,t.jsx)(n.a,{href:"/boot/servicegraph",children:"Service Graph"})," to support start/stop of independent services"]}),"\n",(0,t.jsx)(n.li,{children:"Provides the ability to gracefully shutdown services"}),"\n",(0,t.jsx)(n.li,{children:"Takes care of full application lifecycle and logging"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"launcher-in-a-nutshell",children:"Launcher in a nutshell"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"#",children:(0,t.jsx)(a.Z,{url:"/launcher/src/main/java/io/activej/launcher/Launcher.java",children:(0,t.jsx)(n.code,{children:"Launcher"})})})," is a very explicit tool. You can understand how it just by looking at the implementation of its main ",(0,t.jsx)(n.code,{children:"launch()"})," method in a nutshell:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'public void launch(String[] args) throws Exception {\n    logger.info("=== INJECTING DEPENDENCIES");\n    Injector injector = createInjector(args);\n    logger.info("Eager instances: " + injector.createEagerInstances());\n    Set<LauncherService> services = injector.getInstance(new Key<Set<LauncherService>>() {});\n    Set<LauncherService> startedServices = new HashSet<>();\n    logger.info("Post-inject instances: " + injector.postInjectInstances());\n\n    logger.info("=== STARTING APPLICATION");\n    logger.info("Starting LauncherServices: " + services);\n    startServices(services, startedServices);\n    onStart();\n    onStartFuture.complete(null);\n\n    logger.info("=== RUNNING APPLICATION");\n    run();\n    onRunFuture.complete(null);\n\n    logger.info("=== STOPPING APPLICATION");\n    onStop();\n    stopServices(startedServices);\n    onCompleteFuture.complete(null);\n'})}),"\n",(0,t.jsx)(n.p,{children:"Step-by-step examination:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Create an ",(0,t.jsx)(a.Z,{url:"/core-inject/src/main/java/io/activej/inject/Injector.java",children:(0,t.jsx)(n.code,{children:"Injector"})})," using the ",(0,t.jsx)(a.Z,{url:"/core-inject/src/main/java/io/activej/inject/module/Module.java",children:(0,t.jsx)(n.code,{children:"Modules"})})," provided in ",(0,t.jsx)(n.code,{children:"Launcher"})]}),"\n",(0,t.jsxs)(n.li,{children:["Inject top-level dependencies into the ",(0,t.jsx)(n.code,{children:"Launcher"})," instance itself"]}),"\n",(0,t.jsxs)(n.li,{children:["Instantiate all keys marked as ",(0,t.jsx)(a.Z,{url:"/core-inject/src/main/java/io/activej/inject/annotation/Eager.java",children:(0,t.jsx)(n.code,{children:"@Eager"})}),", exported by ",(0,t.jsx)(n.code,{children:"Launcher\u2019s Modules"})]}),"\n",(0,t.jsxs)(n.li,{children:["Start all services from the ",(0,t.jsx)(n.code,{children:"Set<LauncherService>"})," multibinder set, exported by ",(0,t.jsx)(n.strong,{children:"Launcher\u2019s Modules"}),", and execute the ",(0,t.jsx)(n.code,{children:"onStart()"})," method"]}),"\n",(0,t.jsxs)(n.li,{children:["Execute ",(0,t.jsx)(n.code,{children:"run()"})," method"]}),"\n",(0,t.jsxs)(n.li,{children:["When ",(0,t.jsx)(n.code,{children:"run()"})," is finished (either by finishing all app-specific computations or in response to a shutdown request such as SIGKILL), execute the ",(0,t.jsx)(n.code,{children:"onStop()"})," method and stop all services"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Here is an example of the ",(0,t.jsx)(n.code,{children:"Launcher"})," lifecycle represented as logs (particularly, ",(0,t.jsx)(a.Z,{url:"/launchers/http/src/main/java/io/activej/launchers/http/HttpServerLauncher.java",children:(0,t.jsx)(n.code,{children:"HttpServerLauncher"})})," subclass that provides an ",(0,t.jsx)(a.Z,{url:"/core-http/src/main/java/io/activej/http/HttpServer.java",children:(0,t.jsx)(n.code,{children:"HttpServer"})}),", an ",(0,t.jsx)(n.a,{href:"/async-io/eventloop",children:(0,t.jsx)(n.code,{children:"Eventloop"})})," and ",(0,t.jsx)(n.a,{href:"/boot/config",children:(0,t.jsx)(n.code,{children:"Config"})}),"). Launch ",(0,t.jsx)(n.a,{href:"/tutorials/getting-started",children:"this"})," example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",metastring:"url=/examples/tutorials/getting-started/src/main/java/HttpHelloWorldExample.java tag=EXAMPLE",children:'public final class HttpHelloWorldExample extends HttpServerLauncher {\n  @Provides\n  AsyncServlet servlet() {\n    return request -> HttpResponse.ok200()\n      .withPlainText("Hello World")\n      .toPromise();\n  }\n\n  public static void main(String[] args) throws Exception {\n    Launcher launcher = new HttpHelloWorldExample();\n    launcher.launch(args);\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"to see alike logs:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:" === INJECTING DEPENDENCIES\nCreated eager singletons\nPost-injected instances: [HttpHelloWorldExample]\n\n=== STARTING APPLICATION\nStarting LauncherServices: [io.active.net.jmx.JmxModule, io.active.net.service.ServiceGraphModule]\nStarting LauncherService: io.active.net.jmx.JmxModule\nStarting LauncherService: io.active.net.service.ServiceGraphModule\nCreating ServiceGraph...\nStarting services\nListening on [/0.0.0.0:8080]: HttpServer{listenAddresses=[/0.0.0.0:8080]}\nStarted io.active.net.http.HttpServer\n\n=== RUNNING APPLICATION\nHTTP Server is listening on http://localhost:8080/\n\n=== STOPPING APPLICATION\nStopping LauncherService: io.active.net.jmx.JmxModule\nStopping LauncherService: io.active.net.service.ServiceGraphModule\nStopping ServiceGraph...\nStopping services\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Launcher"})," optionally requires the following dependencies from its ",(0,t.jsx)(n.strong,{children:"Modules"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@Eager"})," keygroup"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Set<LauncherService>"})," multibinder set"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Launcher"})," exports the following dependencies to its ",(0,t.jsx)(n.strong,{children:"Modules"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"class Launcher{\n \t@NotNull\n\tpublic final Injector createInjector() {\n\t   return Injector.of(getInternalModule()\n\t       .combineWith(getModule())\n\t       .overrideWith(getOverrideModule()));\n\t}\n\n  private Module getInternalModule() {\n     Class<Launcher> launcherClass = (Class<Launcher>) getClass();\n     Key<CompletionStage<Void>> completionStageKey = new Key<>() {};\n\n     return ModuleBuilder.create()\n         .bind(String[].class, Args.class).toInstance(args)\n\n         .bind(Launcher.class).to(launcherClass)\n         .bind(launcherClass).toInstance(this)\n\n         .bind(completionStageKey.qualified(OnStart.class)).toInstance(onStartFuture)\n         .bind(completionStageKey.qualified(OnRun.class)).toInstance(onRunFuture)\n         .bind(completionStageKey.qualified(OnComplete.class)).toInstance(onCompleteFuture)\n\n         .scan(Launcher.this)\n         .build();\n\t}\n\n  // this method can be overridden by subclasses which extend Launcher,\n  // provides business logic modules (for example, ConfigModule)\n  protected Module getModule() {\n      return Module.empty();\n  }\n\n  // this method can be overridden by subclasses which extend Launcher,\n  // overrides definitions in internal module\n  protected Module getOverrideModule() {\n      return Module.empty();\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@Args String[]"})," arguments of its ",(0,t.jsx)(n.code,{children:"Launcher.launch(String[] args)"})," method, corresponding to ",(0,t.jsx)(n.code,{children:"main(String[] args)"})," method"]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"Launcher"})," instance itself"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@OnStart"})," ",(0,t.jsx)(n.code,{children:"CompletionStage<Void>"})," future which is completed when application is wired and started"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@OnRun"})," ",(0,t.jsx)(n.code,{children:"CompletionStage<Void>"})," future which is completed when ",(0,t.jsx)(n.code,{children:"Launcher.run()"})," is complete."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@OnComplete"})," ",(0,t.jsx)(n.code,{children:"CompletionStage<Void>"})," future which is completed when application is stopped"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Launcher"})," also has convenient diagnostic and JMX features:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Instant of launch, start, run, stop, and complete"}),"\n",(0,t.jsx)(n.li,{children:"Duration of start, run, stop, and total duration"}),"\n",(0,t.jsxs)(n.li,{children:["Throwable ",(0,t.jsx)(n.em,{children:"applicationError"})," property"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"more-examples",children:"More examples"}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.p,{children:"To run the examples, you need to clone ActiveJ from GitHub"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"git clone https://github.com/hoangtien2k3/reactify-core\n"})}),(0,t.jsxs)(n.p,{children:["And import it as a Maven project. Check out tag ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(s.Z,{name:"currentVersion"})}),". Before running the examples, build the project.\nThese examples are located at ",(0,t.jsx)(n.code,{children:"activej/examples/core/datastream"})]})]}),"\n",(0,t.jsx)(n.h3,{id:"hello-world-example",children:"Hello World Example"}),"\n",(0,t.jsx)(n.p,{children:'Here is a simple "Hello World" Launcher application using ActiveJ Inject:'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",metastring:"url=/examples/core/boot/src/main/java/HelloWorldExample.java tag=EXAMPLE",children:'public final class HelloWorldExample extends Launcher {\n  @Inject\n  String message;\n\n  @Provides\n  String message() {\n    return "Hello, world!";\n  }\n\n  @Override\n  protected void run() {\n    System.out.println(message);\n  }\n\n  public static void main(String[] args) throws Exception {\n    Launcher launcher = new HelloWorldExample();\n    launcher.launch(args);\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(a.Z,{url:"/examples/core/boot/src/main/java/HelloWorldExample.java",children:"See full example on GitHub"})})}),"\n",(0,t.jsx)(n.h3,{id:"http-server-from-scratch-using-launcher",children:"HTTP Server from scratch using Launcher"}),"\n",(0,t.jsxs)(n.p,{children:["When creating HTTP servers or any other applications, you can either use some predefined solutions\n(",(0,t.jsx)(n.a,{href:"/http/examples#hello-world-server-with-pre-defined-launcher",children:"see examples"}),") or a simple Launcher instead. In this\ncase, you will have to take care of all the required dependencies and override some basic methods:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",metastring:"url=/examples/core/http/src/main/java/CustomHttpServerExample.java tag=EXAMPLE",children:'public final class CustomHttpServerExample extends Launcher {\n  private static final int PORT = 8080;\n\n  @Provides\n  NioReactor reactor() {\n    return Eventloop.create();\n  }\n\n  @Provides\n  AsyncServlet servlet() {\n    return request -> HttpResponse.ok200()\n      .withPlainText("Hello from HTTP server")\n      .toPromise();\n  }\n\n  @Provides\n  @Eager\n  HttpServer server(NioReactor reactor, AsyncServlet servlet) {\n    return HttpServer.builder(reactor, servlet)\n      .withListenPort(PORT)\n      .build();\n  }\n\n  @Override\n  protected Module getModule() {\n    return ServiceGraphModule.create();\n  }\n\n  @Override\n  protected void run() throws Exception {\n    logger.info("HTTP Server is now available at http://localhost:" + PORT);\n    awaitShutdown();\n  }\n\n  public static void main(String[] args) throws Exception {\n    Launcher launcher = new CustomHttpServerExample();\n    launcher.launch(args);\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(a.Z,{url:"/examples/core/http/src/main/java/CustomHttpServerExample.java",children:"See full example on GitHub"})})}),"\n",(0,t.jsx)(n.h3,{id:"working-with-program-arguments",children:"Working with program arguments"}),"\n",(0,t.jsxs)(n.p,{children:["To access program arguments from the ",(0,t.jsx)(n.code,{children:"Launcher"}),", you have to pass those arguments to ",(0,t.jsx)(n.code,{children:"Launcher#launch"})," method.\nThen there are two ways to access the arguments:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Using ",(0,t.jsx)(n.code,{children:"Launcher"}),"'s ",(0,t.jsx)(n.code,{children:"String[] args"})," field"]}),"\n",(0,t.jsxs)(n.li,{children:["Requesting arguments using Dependency Injection. A key is ",(0,t.jsx)(n.code,{children:"String[].class"})," annotated with ",(0,t.jsx)(n.code,{children:"@Args"})," annotation.\nThe following example illustrates both cases:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",metastring:"url=/examples/core/boot/src/main/java/LauncherArgsExample.java tag=EXAMPLE",children:'public final class LauncherArgsExample extends Launcher {\n\n  @Inject\n  Injector injector;\n\n  @Override\n  protected void run() {\n    System.out.println("Received args: " + Arrays.toString(args));\n\n    String[] injectedArgs = injector.getInstance(Key.of(String[].class, Args.class));\n    System.out.println("Args retrieved from DI: " + Arrays.toString(injectedArgs));\n  }\n\n  public static void main(String[] args) throws Exception {\n    new LauncherArgsExample().launch(args);\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(a.Z,{url:"/examples/core/boot/src/main/java/LauncherArgsExample.java",children:"See full example on GitHub"})})})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},7618:(e,n,r)=>{r.d(n,{Z:()=>a});r(7294);var t=r(9962),i=r(5893);const a=e=>{let{url:n,text:r,isInline:a=!0,children:s}=e;const{siteConfig:l}=(0,t.Z)(),c=n.startsWith("/examples")?l.customFields.githubExamplesBranch:l.customFields.githubBranch;return(0,i.jsx)("a",{style:a?{}:{display:"block",marginBottom:"16px"},href:l.customFields.githubUrl+"/"+c+n,target:"_blank",children:r||s})}},7815:(e,n,r)=>{r.d(n,{Z:()=>i});r(7294);var t=r(9962);const i=e=>{let{name:n}=e;const{siteConfig:r}=(0,t.Z)();if(!n)throw new Error("Variable name is required");if(void 0===r.customFields[n])throw new Error(`Variable ${n} not exist`);return r.customFields[n]}},1151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>s});var t=r(7294);const i={},a=t.createContext(i);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);