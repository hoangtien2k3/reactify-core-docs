"use strict";(self.webpackChunkReactifydocs=self.webpackChunkReactifydocs||[]).push([[6775],{8163:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>h});var t=r(5893),i=r(1151),a=r(7618),s=r(7815);const l={title:"Reactify | SpringBoot, efficiently manage application lifecycle",sidebar_label:"SpringBoot",description:"Reactify SpringBoot manages application lifecycle, starts and stops services and also has handy diagnostic tools.",keywords:["launcher","java launcher","application lifecycle","java framework","spring alternative","netty alternative","jetty alternative"]},c="SpringBoot",o={id:"boot/launcher",title:"Reactify | SpringBoot, efficiently manage application lifecycle",description:"Reactify SpringBoot manages application lifecycle, starts and stops services and also has handy diagnostic tools.",source:"@site/docs/boot/springboot3x.mdx",sourceDirName:"boot",slug:"/boot/springboot3x",permalink:"/boot/springboot3x",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Reactify | SpringBoot, efficiently manage application lifecycle",sidebar_label:"SpringBoot",description:"Reactify SpringBoot manages application lifecycle, starts and stops services and also has handy diagnostic tools.",keywords:["launcher","java launcher","application lifecycle","java framework","spring alternative","netty alternative","jetty alternative"]},sidebar:"docs",previous:{title:"Net",permalink:"/async-io/net"},next:{title:"Service Graph",permalink:"/boot/servicegraph"}},d={},h=[{value:"Overview",id:"overview",level:2},{value:"Features",id:"features",level:2},{value:"SpringBoot in a nutshell",id:"launcher-in-a-nutshell",level:2},{value:"More examples",id:"more-examples",level:2},{value:"Hello World Example",id:"hello-world-example",level:3},{value:"Working with program arguments",id:"working-with-program-arguments",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"springboot3x",children:"Spring Boot 3.x + Webflux"}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["Spring Boot 3 WebFlux is a reactive programming framework that allows developers to build asynchronous ",(0,t.jsx)(n.code,{children:"non-blocking"})," web applications.\nIt is part of the Spring ecosystem and is designed to handle a large number of concurrent requests with minimal resource consumption."]}),"\n",(0,t.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Reactive Programming. "]}),"\n",(0,t.jsxs)(n.li,{children:["Non-blocking I/O: ", " non-blocking I/O operations"]}),"\n",(0,t.jsx)(n.li,{children:"Flexible Programming Model"}),"\n",(0,t.jsx)(n.li,{children:"Integration with Reactive Libraries"}),"\n", (0,t.jsx)(n.li,{children:"Compatibility with Spring Ecosystem"})]}),"\n",(0,t.jsx)(n.h2,{id:"launcher-in-a-nutshell",children:"SpringBoot in a nutshell"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"#",children:(0,t.jsx)(a.Z,{url:"/launcher/src/main/java/io/Reactify/launcher/SpringBoot.java",children:(0,t.jsx)(n.code,{children:"SpringBoot"})})})," is a core component that simplifies the development and deployment of Spring Boot applications. It provides an efficient way to package, run, and manage applications with minimal configuration. Here are the key aspects of the Spring Boot SpringBoot "]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@SpringBootApplication(exclude = {\n\tDataSourceAutoConfiguration.class, \n\tDataSourceTransactionManagerAutoConfiguration.class, \n\tHibernateJpaAutoConfiguration.class, \n\tSecurityAutoConfiguration.class\n}) \n@ComponentScan(basePackages = {"com.example", "com.reactify"}) \n@EnableScheduling \npublic class AuthServiceApplication { \n    public static void main(String[] args) { \n       SpringApplication.run(AuthServiceApplication.class, args); \n    } \n}'})}),"\n",(0,t.jsx)(n.p,{children:"Required:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Add annotation @ComponentScan(basePackages = {\"com.example\", \"com.reactify\"}) ",(0,t.jsx)(a.Z,{url:"/core-inject/src/main/java/io/Reactify/inject/Injector.java"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"com.reactify"})," com.reactify is the required path of the library"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(a.Z,{url:"/core-inject/src/main/java/io/Reactify/inject/annotation/Eager.java",children:(0,t.jsx)(n.code,{children:"com.example"})}),", is a custom path according to your project package "]}),"\n"]}),(0,t.jsx)(n.p,{children:"to see alike logs:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"\t:: Spring Boot ::           * 3.3.5 \n21/01/25 00:34:10||Starting SettingServiceApplication using Java 21.0.3 with PID 75013 \n21/01/25 00:34:10||The following 1 profile is active: \"dev\" \n21/01/25 00:34:12||Multiple Spring Data modules found, entering strict repository configuration mode \n21/01/25 00:34:12||Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. \n21/01/25 00:34:13||Spring Data R2DBC - Could not safely identify store assignment for repository candidate interface \n21/01/25 00:34:13||Finished Spring Data repository scanning in 390 ms. Found 20 R2DBC repository interfaces. \n21/01/25 00:34:16||Configuring minio client: http://localhost:9000 \n21/01/25 00:34:18||Start initializing cache \n21/01/25 00:34:19||Reflections took 134 ms to scan 1 urls, producing 10 keys and 304 values \n21/01/25 00:34:19||Finish initializing 12 cache \n21/01/25 00:34:20||Exposing 1 endpoint beneath base path '/actuator' \n21/01/25 00:34:20||whitelist: /actuator/health ..."})}),"\n",(0,t.jsx)(n.h2,{id:"more-examples",children:"More examples"}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.p,{children:"To run the examples, you need to clone keycloak-auth-service from GitHub"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"git clone https://github.com/hoangtien2k3/keycloak-auth-service.git\n"})}),(0,t.jsxs)(n.p,{children:["And import it as a Maven project. Check out tag ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(s.Z,{name:"currentVersion"})}),". Before running the examples, build the project.\nThese examples are located at ",(0,t.jsx)(n.code,{children:"/keycloak-auth-service"})]})]}),"\n",(0,t.jsx)(n.h3,{id:"hello-world-example",children:"Hello World Example"}),"\n",(0,t.jsx)(n.p,{children:'Here is a simple "Hello World" SpringBoot application using Reactify Inject:'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",metastring:"url=/examples/core/boot/src/main/java/HelloWorldExample.java tag=EXAMPLE",children:'public final class HelloWorldExample extends SpringBoot {\n  @Inject\n  String message;\n\n  @Provides\n  String message() {\n    return "Hello, world!";\n  }\n\n  @Override\n  protected void run() {\n    System.out.println(message);\n  }\n\n  public static void main(String[] args) throws Exception {\n    SpringBoot launcher = new HelloWorldExample();\n    launcher.launch(args);\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(a.Z,{url:"/examples/core/boot/src/main/java/HelloWorldExample.java",children:"See full example on GitHub"})})}),"\n",(0,t.jsx)(n.h3,{id:"working-with-program-arguments",children:"Working with program arguments"}),"\n",(0,t.jsxs)(n.p,{children:["To access program arguments from the ",(0,t.jsx)(n.code,{children:"SpringBoot"}),", you have to pass those arguments to ",(0,t.jsx)(n.code,{children:"SpringBoot#launch"})," method.\nThen there are two ways to access the arguments:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Using ",(0,t.jsx)(n.code,{children:"SpringBoot"}),"'s ",(0,t.jsx)(n.code,{children:"String[] args"})," field"]}),"\n",(0,t.jsxs)(n.li,{children:["Requesting arguments using Dependency Injection. A key is ",(0,t.jsx)(n.code,{children:"String[].class"})," annotated with ",(0,t.jsx)(n.code,{children:"@Args"})," annotation.\nThe following example illustrates both cases:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",metastring:"url=/examples/core/boot/src/main/java/SpringBootArgsExample.java tag=EXAMPLE",children:'public final class SpringBootArgsExample extends SpringBoot {\n\n  @Inject\n  Injector injector;\n\n  @Override\n  protected void run() {\n    System.out.println("Received args: " + Arrays.toString(args));\n\n    String[] injectedArgs = injector.getInstance(Key.of(String[].class, Args.class));\n    System.out.println("Args retrieved from DI: " + Arrays.toString(injectedArgs));\n  }\n\n  public static void main(String[] args) throws Exception {\n    new SpringBootArgsExample().launch(args);\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(a.Z,{url:"/examples/core/boot/src/main/java/SpringBootArgsExample.java",children:"See full example on GitHub"})})})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},7618:(e,n,r)=>{r.d(n,{Z:()=>a});r(7294);var t=r(9962),i=r(5893);const a=e=>{let{url:n,text:r,isInline:a=!0,children:s}=e;const{siteConfig:l}=(0,t.Z)(),c=n.startsWith("/examples")?l.customFields.githubExamplesBranch:l.customFields.githubBranch;return(0,i.jsx)("a",{style:a?{}:{display:"block",marginBottom:"16px"},href:l.customFields.githubUrl+"/"+c+n,target:"_blank",children:r||s})}},7815:(e,n,r)=>{r.d(n,{Z:()=>i});r(7294);var t=r(9962);const i=e=>{let{name:n}=e;const{siteConfig:r}=(0,t.Z)();if(!n)throw new Error("Variable name is required");if(void 0===r.customFields[n])throw new Error(`Variable ${n} not exist`);return r.customFields[n]}},1151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>s});var t=r(7294);const i={},a=t.createContext(i);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);