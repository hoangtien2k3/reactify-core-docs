"use strict";(self.webpackChunkactivejdocs=self.webpackChunkactivejdocs||[]).push([[2996],{4836:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>h});var i=n(5893),r=n(1151),a=n(7618);n(7815);const s={title:"ActiveJ | Getting Started",sidebar_label:"Getting Started",keywords:["java","java for beginners","java framework","guide","tutorial","web application","async","spring","spring alternative","netty alternative","jetty alternative","authorization","server","client","servlet"],description:"A high-performance asynchronous HTTP server in 10 lines of code using ActiveJ Java platform.",sidebar_position:1},o="Getting Started",l={id:"tutorials/getting-started",title:"ActiveJ | Getting Started",description:"A high-performance asynchronous HTTP server in 10 lines of code using ActiveJ Java platform.",source:"@site/docs/tutorials/getting-started.mdx",sourceDirName:"tutorials",slug:"/tutorials/getting-started",permalink:"/tutorials/getting-started",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"ActiveJ | Getting Started",sidebar_label:"Getting Started",keywords:["java","java for beginners","java framework","guide","tutorial","web application","async","spring","spring alternative","netty alternative","jetty alternative","authorization","server","client","servlet"],description:"A high-performance asynchronous HTTP server in 10 lines of code using ActiveJ Java platform.",sidebar_position:1},sidebar:"tutorials",next:{title:"Template Engine Integration",permalink:"/tutorials/template-engine-integration"}},c={},h=[{value:"What you will need:",id:"what-you-will-need",level:2},{value:"Which ActiveJ technologies will be used:",id:"which-activej-technologies-will-be-used",level:2},{value:"To proceed with this guide you have two options:",id:"to-proceed-with-this-guide-you-have-two-options",level:2},{value:"1. Create from Maven Archetype",id:"1-create-from-maven-archetype",level:2},{value:"2. Download and run the example",id:"2-download-and-run-the-example",level:2},{value:"Source code",id:"source-code",level:3},{value:"Run the app",id:"run-the-app",level:3},{value:"What&#39;s next?",id:"whats-next",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,i.jsxs)(t.p,{children:["ActiveJ is a minimalistic and boilerplate-free Java platform that is intended to replace Spring, Spark, Micronaut, and\nother similar solutions.\nIt features a rich stack of technologies with an efficient async programming model and powerful DI library ",(0,i.jsx)(t.a,{href:"/inject",children:"ActiveJ Inject"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"ActiveJ consists of several loosely coupled components that complement and empower each other: async core, efficient I/O processing,\nhigh-performance Jetty and Netty alternatives, along with handy boot utilities."}),"\n",(0,i.jsxs)(t.p,{children:["In this tutorial we will look at a simple HTTP server that sends a \u201cHello World!\u201d greeting. With ActiveJ\n",(0,i.jsx)(t.a,{href:"/boot/launcher",children:"Launchers"}),", particularly ",(0,i.jsx)(t.code,{children:"HttpServerLauncher"})," subclass, and ActiveJ Inject DI you can\nwrite a fully-functional server in around 10 lines of code."]}),"\n",(0,i.jsx)(t.h2,{id:"what-you-will-need",children:"What you will need:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"5-10 minutes"}),"\n",(0,i.jsx)(t.li,{children:"Your favorite IDE"}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.oracle.com/java/technologies/javase-downloads.html",children:"JDK 17+"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://maven.apache.org/download.cgi",children:"Maven 3.0+"})}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"which-activej-technologies-will-be-used",children:"Which ActiveJ technologies will be used:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/http",children:"ActiveJ HTTP"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/async-io/promise",children:"ActiveJ Promises"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/inject",children:"ActiveJ Inject"})}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"to-proceed-with-this-guide-you-have-two-options",children:"To proceed with this guide you have two options:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Create the app from Maven ",(0,i.jsx)(t.a,{href:"#1-create-from-maven-archetype",children:"archetype"})]}),"\n",(0,i.jsxs)(t.li,{children:["Download and run ",(0,i.jsx)(t.a,{href:"#2-download-and-run-the-example",children:"working example"})]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"1-create-from-maven-archetype",children:"1. Create from Maven Archetype"}),"\n",(0,i.jsx)(t.p,{children:"Simply enter the following command in the terminal:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"mvn archetype:generate -DarchetypeGroupId=io.activej -DarchetypeArtifactId=archetype-http -DarchetypeVersion=6.0-beta2\n"})}),"\n",(0,i.jsxs)(t.p,{children:["The project will be automatically generated on your machine. Open ",(0,i.jsx)(t.strong,{children:"WebApp"})," and run its ",(0,i.jsx)(t.em,{children:"main"})," method. Then\nopen your favourite browser and go to ",(0,i.jsx)(t.a,{href:"http://localhost:8080",children:"localhost:8080"})]}),"\n",(0,i.jsx)(t.h2,{id:"2-download-and-run-the-example",children:"2. Download and run the example"}),"\n",(0,i.jsxs)(t.p,{children:["First, ",(0,i.jsx)(t.a,{href:"https://github.com/hoangtien2k3/reactify-core/tree/examples-6.0-beta2",children:"clone ActiveJ"})," locally:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"git clone -b examples-6.0-beta2 https://github.com/hoangtien2k3/reactify-core.git\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Then open the project in your IDE of choice. Before running the example, build the project (",(0,i.jsx)(t.strong,{children:"Ctrl + F9"})," for IntelliJ IDEA)."]}),"\n",(0,i.jsxs)(t.p,{children:["Navigate to a ",(0,i.jsx)(a.Z,{text:"HttpHelloWorldExample",url:"/examples/tutorials/getting-started/src/main/java/HttpHelloWorldExample.java"})," class, which is located at ",(0,i.jsx)(t.code,{children:"activej/examples/tutorials/getting-started"}),"\nand run its ",(0,i.jsx)(t.code,{children:"main"})," method. Open your favourite browser and go to ",(0,i.jsx)(t.a,{href:"http://localhost:8080",children:"localhost:8080"})]}),"\n",(0,i.jsx)(t.h3,{id:"source-code",children:"Source code"}),"\n",(0,i.jsxs)(t.p,{children:["A source code for a simple web server is quite minimal. It only consists of a single ",(0,i.jsx)(a.Z,{text:"Java class",url:"/examples/tutorials/getting-started/src/main/java/HttpHelloWorldExample.java"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",metastring:"url=/examples/tutorials/getting-started/src/main/java/HttpHelloWorldExample.java tag=EXAMPLE",children:'public final class HttpHelloWorldExample extends HttpServerLauncher {\n  @Provides\n  AsyncServlet servlet() {\n    return request -> HttpResponse.ok200()\n      .withPlainText("Hello World")\n      .toPromise();\n  }\n\n  public static void main(String[] args) throws Exception {\n    Launcher launcher = new HttpHelloWorldExample();\n    launcher.launch(args);\n  }\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"HttpHelloWorldExample"})," extends ",(0,i.jsx)(t.code,{children:"HttpServerLauncher"})," class to manage application lifecycle.\nIn this example, the only important thing to know about the superclass is that it implements the ",(0,i.jsx)(t.em,{children:"launch"})," method that starts our server."]}),"\n",(0,i.jsxs)(t.p,{children:["We provide an ",(0,i.jsx)(t.strong,{children:"AsyncServlet"})," which receives ",(0,i.jsx)(t.strong,{children:"HttpRequest"}),"s from clients, creates ",(0,i.jsx)(t.strong,{children:"HttpResponse"}),"s and sends them back to the client.\n",(0,i.jsx)(t.code,{children:"@Provides"})," annotation means that this method is available for binding as the root HTTP endpoint listener."]}),"\n",(0,i.jsxs)(t.p,{children:["To define processing of the received requests, we override ",(0,i.jsx)(t.em,{children:"AsyncServlet.serve"})," method with a lambda. We create a promise\nof ",(0,i.jsx)(t.strong,{children:"HttpResponse"})," with code ",(0,i.jsx)(t.code,{children:"200"}),' and "Hello World!" body. ActiveJ is fully asynchronous, so our HTTP Servlets are asynchronous too.\nA simple ',(0,i.jsx)(t.strong,{children:"HttpResponse"})," can be replaced with a ",(0,i.jsx)(t.a,{href:"/async-io/promise",children:"Promise"})," of ",(0,i.jsx)(t.strong,{children:"HttpResponse"})," to make it asynchronous."]}),"\n",(0,i.jsxs)(t.p,{children:["We also define the ",(0,i.jsx)(t.em,{children:"main"})," method and launch our server using the ",(0,i.jsx)(t.em,{children:"launch"})," method. This method injects dependencies, starts\nthe application, runs it and stops it when needed."]}),"\n",(0,i.jsx)(t.h3,{id:"run-the-app",children:"Run the app"}),"\n",(0,i.jsxs)(t.p,{children:["Now, let's test the application. First, run ",(0,i.jsx)(t.em,{children:"HttpHelloWorldExample.main"}),", then open your favourite browser and go to\n",(0,i.jsx)(t.a,{href:"http://localhost:8080",children:"localhost:8080"}),"\nYou will receive a ",(0,i.jsx)(t.code,{children:"Hello World!"})," message from the server. Congratulations, you've just launched your first\nActiveJ application!"]}),"\n",(0,i.jsx)(t.h2,{id:"whats-next",children:"What's next?"}),"\n",(0,i.jsxs)(t.p,{children:["To make ActiveJ more developer-friendly, we've created dozens of tutorials and examples of different scales,\nrepresenting most of the platform's capabilities. Click \"Next\" to get to the next tutorial. You can also explore ActiveJ\n",(0,i.jsx)(t.a,{href:"/boot/launcher",children:"docs"})," first."]})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},7618:(e,t,n)=>{n.d(t,{Z:()=>a});n(7294);var i=n(9962),r=n(5893);const a=e=>{let{url:t,text:n,isInline:a=!0,children:s}=e;const{siteConfig:o}=(0,i.Z)(),l=t.startsWith("/examples")?o.customFields.githubExamplesBranch:o.customFields.githubBranch;return(0,r.jsx)("a",{style:a?{}:{display:"block",marginBottom:"16px"},href:o.customFields.githubUrl+"/"+l+t,target:"_blank",children:n||s})}},7815:(e,t,n)=>{n.d(t,{Z:()=>r});n(7294);var i=n(9962);const r=e=>{let{name:t}=e;const{siteConfig:n}=(0,i.Z)();if(!t)throw new Error("Variable name is required");if(void 0===n.customFields[t])throw new Error(`Variable ${t} not exist`);return n.customFields[t]}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>s});var i=n(7294);const r={},a=i.createContext(r);function s(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);