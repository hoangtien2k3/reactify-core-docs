"use strict";(self.webpackChunkactivejdocs=self.webpackChunkactivejdocs||[]).push([[8717],{4924:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>h});var n=t(5893),r=t(1151),a=t(7618),s=t(7815),c=t(3149);const o={sidebar_label:"Overview",slug:"/specializer"},l="Overview",d={id:"specializer/overview",title:"Overview",description:"ActiveJ Specializer is an innovative technology for improving class runtime performance for the JVM. It is one of the ActiveJ technologies that has no third-party dependencies, so it can be used as a stand-alone component.",source:"@site/docs/specializer/overview.mdx",sourceDirName:"specializer",slug:"/specializer",permalink:"/specializer",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Overview",slug:"/specializer"},sidebar:"docs",previous:{title:"Examples",permalink:"/serializer/examples"},next:{title:"Examples",permalink:"/specializer/examples"}},p={},h=[{value:"How it works?",id:"how-it-works",level:2},{value:"Why ActiveJ Specializer?",id:"why-activej-specializer",level:2},{value:"High flexibility",id:"high-flexibility",level:2},{value:"Add ActiveJ Specializer to your project",id:"add-activej-specializer-to-your-project",level:2}];function v(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"overview",children:"Overview"}),"\n",(0,n.jsx)(i.p,{children:"ActiveJ Specializer is an innovative technology for improving class runtime performance for the JVM. It is one of the ActiveJ technologies that has no third-party dependencies, so it can be used as a stand-alone component."}),"\n",(0,n.jsx)(i.h2,{id:"how-it-works",children:"How it works?"}),"\n",(0,n.jsxs)(i.p,{children:["ActiveJ Specializer uses ASM library to automatically convert class instances into specialized static classes, and class instance fields into baked-in static fields. This enables a wide variety of JVM optimizations for static classes that are not possible otherwise: dead code elimination, aggressively inlining methods, and static constants. According to our measures, in some cases speedups can reach ",(0,n.jsx)(i.strong,{children:"30%-50%"}),"."]}),"\n",(0,n.jsx)(i.h2,{id:"why-activej-specializer",children:"Why ActiveJ Specializer?"}),"\n",(0,n.jsxs)(i.p,{children:["This simple example illustrates the core ActiveJ Specializer concept. Suppose there is an ",(0,n.jsx)(i.code,{children:"INT_UNARY_OPERATOR"})," that can be simplified. ",(0,n.jsx)(i.code,{children:"INT_UNARY_OPERATOR_SPECIALIZED"})," specializes the equation similarly to the ",(0,n.jsx)(i.code,{children:"INT_UNARY_OPERATOR_SPECIALIZED_MANUALLY"}),", but does so automagically."]}),"\n",(0,n.jsx)(i.p,{children:"According to the benchmarks the original equation was processed in 69.938 ns, while manual and automatic specialized took only 26.533 ns and 26.691 ns, respectively."}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:"static IntUnaryOperator INT_UNARY_OPERATOR =\n    new IntUnaryOperatorProduct(\n        new IntUnaryOperatorSum(\n            new IntUnaryOperatorSum(\n                 new IntUnaryOperatorIdentity(),\n                 new IntUnaryOperatorConst(5)),\n            new IntUnaryOperatorConst(-5)),\n         new IntUnaryOperatorConst(-1));\n\nstatic IntUnaryOperator INT_UNARY_OPERATOR_SPECIALIZED_MANUALLY =\n    new IntUnaryOperator() {\n        @Override\n        public int applyAsInt(int x) {\n            return -x;\n        }\n    };\n\nstatic IntUnaryOperator INT_UNARY_OPERATOR_SPECIALIZED =\n    SPECIALIZER.specialize(INT_UNARY_OPERATOR);\n"})}),"\n",(0,n.jsx)(i.h2,{id:"high-flexibility",children:"High flexibility"}),"\n",(0,n.jsxs)(i.p,{children:["ActiveJ Specializer goes far beyond arithmetic equations and can be used in complex scenarios. For example, according to ",(0,n.jsx)(a.Z,{text:"benchmarks",url:"/benchmarks/inject/src/main/java/io/activej/inject/ActiveJDirectScopebindBenchmark.java"}),", ActiveJ Specializer makes the ",(0,n.jsx)(i.strong,{children:"ActiveJ Inject"})," DI library one-third faster. To apply ActiveJ Specializer to ActiveJ Inject, simply add ",(0,n.jsx)(i.code,{children:"Injector.useSpecializer()"})," before instantiating Injector."]}),"\n",(0,n.jsx)(i.h2,{id:"add-activej-specializer-to-your-project",children:"Add ActiveJ Specializer to your project"}),"\n",(0,n.jsxs)(i.p,{children:["You can add ActiveJ Specializer to your project by importing its Maven repository.\nThese docs cover the most recent release of ActiveJ Specializer ",(0,n.jsx)(i.strong,{children:(0,n.jsx)(s.Z,{name:"currentVersion"})})," (see on ",(0,n.jsx)(c.Z,{href:"https://github.com/hoangtien2k3/reactify-core/tree/{{currentVersion}}/core-specializer",children:"Github"})," or ",(0,n.jsx)(i.a,{href:"https://mvnrepository.com/artifact/io.activej/activej-specializer",children:"Maven"}),")."]})]})}function u(e={}){const{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(v,{...e})}):v(e)}},3149:(e,i,t)=>{t.d(i,{Z:()=>l});t(7294);var n=t(9962),r=t(1106),a=t.n(r),s=t(5835),c=t.n(s),o=t(5893);c().interpolate=/{{([\s\S]+?)}}/g;const l=function(e){let{href:i,children:t,target:r="_blank"}=e;const{siteConfig:s}=(0,n.Z)(),c=a()(i);return(0,o.jsx)("a",{href:c(s.customFields),target:r,children:t})}},7618:(e,i,t)=>{t.d(i,{Z:()=>a});t(7294);var n=t(9962),r=t(5893);const a=e=>{let{url:i,text:t,isInline:a=!0,children:s}=e;const{siteConfig:c}=(0,n.Z)(),o=i.startsWith("/examples")?c.customFields.githubExamplesBranch:c.customFields.githubBranch;return(0,r.jsx)("a",{style:a?{}:{display:"block",marginBottom:"16px"},href:c.customFields.githubUrl+"/"+o+i,target:"_blank",children:t||s})}},7815:(e,i,t)=>{t.d(i,{Z:()=>r});t(7294);var n=t(9962);const r=e=>{let{name:i}=e;const{siteConfig:t}=(0,n.Z)();if(!i)throw new Error("Variable name is required");if(void 0===t.customFields[i])throw new Error(`Variable ${i} not exist`);return t.customFields[i]}}}]);