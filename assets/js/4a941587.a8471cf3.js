"use strict";(self.webpackChunkactivejdocs=self.webpackChunkactivejdocs||[]).push([[2636],{5647:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>u});var i=t(5893),r=t(1151),a=t(7815),o=t(3149);const s={title:"ActiveJ Inject | Lightning-fast and ultimately powerful Dependency Injection Java library. Multithreaded friendly, feature-rich, and can boast with lighting-fast start-up time and runtime",sidebar_label:"Overview",keywords:["di","dependency injection","guice alternative","spring di","spring alternative","di benchmarks","java","java di","java dependency injection","java framework"],slug:"/inject"},c="Overview",d={id:"inject/overview",title:"ActiveJ Inject | Lightning-fast and ultimately powerful Dependency Injection Java library. Multithreaded friendly, feature-rich, and can boast with lighting-fast start-up time and runtime",description:"ActiveJ Inject is a lightweight dependency injection library that is optimized for performance and that has no third-party dependencies. It is multi-thread friendly, feature-rich, and boasts fast start-up time and runtime, far superior to Spring DI or Guice.",source:"@site/docs/inject/overview.mdx",sourceDirName:"inject",slug:"/inject",permalink:"/inject",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"ActiveJ Inject | Lightning-fast and ultimately powerful Dependency Injection Java library. Multithreaded friendly, feature-rich, and can boast with lighting-fast start-up time and runtime",sidebar_label:"Overview",keywords:["di","dependency injection","guice alternative","spring di","spring alternative","di benchmarks","java","java di","java dependency injection","java framework"],slug:"/inject"},sidebar:"docs",previous:{title:"Examples",permalink:"/http/examples"},next:{title:"Basics",permalink:"/inject/basics"}},l={},u=[{value:"Why ActiveJ Inject?",id:"why-activej-inject",level:2},{value:"Dependency Injection: Redefined",id:"dependency-injection-redefined",level:2},{value:"Add ActiveJ Inject to your project",id:"add-activej-inject-to-your-project",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"ActiveJ Inject is a lightweight dependency injection library that is optimized for performance and that has no third-party dependencies. It is multi-thread friendly, feature-rich, and boasts fast start-up time and runtime, far superior to Spring DI or Guice.\nActiveJ Inject is one of ActiveJ technologies and can be used as a standalone component."}),"\n",(0,i.jsx)(n.h2,{id:"why-activej-inject",children:"Why ActiveJ Inject?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Annotation-based configuration is supported, as well as manual binding to avoid reflection overhead"}),"\n",(0,i.jsx)(n.li,{children:"Bindings are grouped into Modules that can be reused in other applications"}),"\n",(0,i.jsx)(n.li,{children:"Optimized injectors for single-threaded and multi-threaded use cases"}),"\n",(0,i.jsx)(n.li,{children:"Ability to combine, override and transform bindings"}),"\n",(0,i.jsx)(n.li,{children:"Support for singletons, nested scopes and transient bindings"}),"\n",(0,i.jsx)(n.li,{children:"Dependency graph processing is performed once at startup time"}),"\n",(0,i.jsx)(n.li,{children:"Provides means to introspect the dependency graph"}),"\n",(0,i.jsx)(n.li,{children:"Automatic resolution of non-conflicting subclasses bindings"}),"\n",(0,i.jsx)(n.li,{children:"No third-party dependencies"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"dependency-injection-redefined",children:"Dependency Injection: Redefined"}),"\n",(0,i.jsxs)(n.p,{children:["Enjoy development with a wide range of powerful tools. ActiveJ Inject makes it easy to develop, debugg, refactor, and reuse ",(0,i.jsx)(n.strong,{children:"code without restrictions or overhead"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Annotation processing is separated into a standard plugin, which is used by default and allows you to ",(0,i.jsx)(n.strong,{children:"generate missing dependencies"}),". However, if you need to implement complex business logic, you can either use ",(0,i.jsx)(n.strong,{children:"ActiveJ Inject DSL"})," or even create your own ",(0,i.jsx)(n.strong,{children:"annotations processing plugins"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["DSL provides support for ",(0,i.jsx)(n.strong,{children:"programmatic binding generation, dependency graph introspection, transformations, automatic generation of missing bindings, and modification of existing bindings"}),". In this way, you can use the full power of Java to algorithmically create complex bindings and dependencies graphs directly ",(0,i.jsx)(n.strong,{children:"at runtime"}),", taking into account the runtime information and settings."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'Module cookbook = new AbstractModule() {\n\t@Provides\n\tSugar sugar() { return new Sugar("Sugar", 10.f); }\n\n\t@Provides\n\tButter butter() { return new Butter("Butter", 20.0f); }\n\n\t@Provides\n\tFlour flour() { return new Flour("Flour", 100.0f); }\n\n\t@Provides\n\tPastry pastry(Sugar sugar, Butter butter, Flour flour) {\n\t\treturn new Pastry(sugar, butter, flour);\n\t}\n\n\t@Provides\n\tCookie cookie(Pastry pastry) {\n\t\treturn new Cookie(pastry);\n\t}\n};\nInjector.of(cookbook).getInstance(Cookie.class);\n'})}),"\n",(0,i.jsx)(n.h2,{id:"add-activej-inject-to-your-project",children:"Add ActiveJ Inject to your project"}),"\n",(0,i.jsxs)(n.p,{children:["You can add ActiveJ Inject to your project by importing its Maven repository.\nThese docs cover the most recent release of ActiveJ Inject ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(a.Z,{name:"currentVersion"})})," (see on ",(0,i.jsx)(o.Z,{href:"https://github.com/activej/activej/tree/{{currentVersion}}/core-inject",children:"Github"})," or ",(0,i.jsx)(n.a,{href:"https://mvnrepository.com/artifact/io.activej/activej-inject",children:"Maven"}),")."]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},3149:(e,n,t)=>{t.d(n,{Z:()=>d});t(7294);var i=t(9962),r=t(1106),a=t.n(r),o=t(5835),s=t.n(o),c=t(5893);s().interpolate=/{{([\s\S]+?)}}/g;const d=function(e){let{href:n,children:t,target:r="_blank"}=e;const{siteConfig:o}=(0,i.Z)(),s=a()(n);return(0,c.jsx)("a",{href:s(o.customFields),target:r,children:t})}},7815:(e,n,t)=>{t.d(n,{Z:()=>r});t(7294);var i=t(9962);const r=e=>{let{name:n}=e;const{siteConfig:t}=(0,i.Z)();if(!n)throw new Error("Variable name is required");if(void 0===t.customFields[n])throw new Error(`Variable ${n} not exist`);return t.customFields[n]}}}]);